diff -Naur /usr/src/linux-4.19.98/arch/x86/entry/syscalls/syscall_64.tbl test_kernel/arch/x86/entry/syscalls/syscall_64.tbl
--- /usr/src/linux-4.19.98/arch/x86/entry/syscalls/syscall_64.tbl	2020-01-23 02:21:39.000000000 -0500
+++ test_kernel/arch/x86/entry/syscalls/syscall_64.tbl	2020-10-09 18:09:23.894791614 -0400
@@ -343,6 +343,9 @@
 332	common	statx			__x64_sys_statx
 333	common	io_pgetevents		__x64_sys_io_pgetevents
 334	common	rseq			__x64_sys_rseq
+335	common	start_elevator		__x64_sys_start_elevator
+336	common	issue_request		__x64_sys_issue_request
+337	common	stop_elevator		__x64_sys_stop_elevator
 
 #
 # x32-specific system call numbers start at 512 to avoid cache impact
diff -Naur /usr/src/linux-4.19.98/include/linux/syscalls.h test_kernel/include/linux/syscalls.h
--- /usr/src/linux-4.19.98/include/linux/syscalls.h	2020-01-23 02:21:39.000000000 -0500
+++ test_kernel/include/linux/syscalls.h	2020-10-09 18:10:05.398031119 -0400
@@ -1293,4 +1293,10 @@
 	return old;
 }
 
+asmlinkage long sys_start_elevator(void);
+
+asmlinkage long sys_issue_request(int start_floor, int destination_floor, int type);
+
+asmlinkage long sys_stop_elevator(void);
+
 #endif
diff -Naur /usr/src/linux-4.19.98/Makefile test_kernel/Makefile
--- /usr/src/linux-4.19.98/Makefile	2020-01-23 02:21:39.000000000 -0500
+++ test_kernel/Makefile	2020-10-09 18:11:15.594917664 -0400
@@ -966,7 +966,7 @@
 
 
 ifeq ($(KBUILD_EXTMOD),)
-core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/
+core-y		+= kernel/ certs/ mm/ fs/ ipc/ security/ crypto/ block/ SystemCalls/
 
 vmlinux-dirs	:= $(patsubst %/,%,$(filter %/, $(init-y) $(init-m) \
 		     $(core-y) $(core-m) $(drivers-y) $(drivers-m) \
diff -Naur /usr/src/linux-4.19.98/SystemCalls/Makefile test_kernel/SystemCalls/Makefile
--- /usr/src/linux-4.19.98/SystemCalls/Makefile	1969-12-31 19:00:00.000000000 -0500
+++ test_kernel/SystemCalls/Makefile	2020-10-09 18:06:50.615464057 -0400
@@ -0,0 +1 @@
+obj-y := sys_calls.o
\ No newline at end of file
diff -Naur /usr/src/linux-4.19.98/SystemCalls/sys_calls.c test_kernel/SystemCalls/sys_calls.c
--- /usr/src/linux-4.19.98/SystemCalls/sys_calls.c	1969-12-31 19:00:00.000000000 -0500
+++ test_kernel/SystemCalls/sys_calls.c	2020-10-09 18:05:50.701433884 -0400
@@ -0,0 +1,34 @@
+#include <linux/linkage.h>
+#include <linux/kernel.h>
+#include <linux/module.h>
+#include <linux/syscalls.h>
+
+long (*STUB_start_elevator)(void) = NULL;
+EXPORT_SYMBOL(STUB_start_elevator);
+
+long (*STUB_issue_request)(int, int, int) = NULL;
+EXPORT_SYMBOL(STUB_issue_request);
+
+long (*STUB_stop_elevator)(void) = NULL;
+EXPORT_SYMBOL(STUB_stop_elevator);
+
+SYSCALL_DEFINE0(start_elevator) {
+    if  (STUB_start_elevator != NULL)
+        return STUB_start_elevator();
+    else
+        return -ENOSYS;
+}
+
+SYSCALL_DEFINE3(issue_request, int, start_floor, int, destination_floor, int, type) {
+    if (STUB_issue_request != NULL)
+        return STUB_issue_request(start_floor, destination_floor, type);
+    else 
+        return -ENOSYS;
+}
+
+SYSCALL_DEFINE0(stop_elevator) {
+    if  (STUB_stop_elevator != NULL)
+        return STUB_stop_elevator();
+    else
+        return -ENOSYS;
+}
